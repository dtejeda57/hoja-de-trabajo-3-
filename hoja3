### 1) ¿Cuál es el tamaño en bytes de un array de 1000 elementos de tipo booleano?
import numpy as np
import array as array
a = np.arange(0,10001) #se crean los mil elementos
b = np.array([a], dtype=bool) #se combierten a boolean
print(b) #Imprime el arreglo en booleano
print(b.dtype) #Indica que el arreglo es booleano
print(b.itemsize) 
print(b.nbytes) #Indica la cantidad de bytes
### 2) Cree un array cuyos elementos sean los enteros pares en [1,100] y en orden decreciente. Muestre los 10 últimos por pantalla.
import pandas as pd
x = np.array(
                         [
                              [2,4,5,6], 
                              [0,3,7,4],
                              [8,8,5,2],
                              [1,5,6,1]
                         ]
                    )
print(x[1:2])
print(x[2,3] , x[2,2])
print(x[2,1:3] )
c = sorted(np.arange(2,101,2),reverse=True)
NO_TOP_10 = c[40:50]
print(NO_TOP_10)
### 3) Dado el array
x = np.array(
                         [
                              [2,4,5,6], 
                              [0,3,7,4],
                              [8,8,5,2],
                              [1,5,6,1]
                         ]
                    )
print(x[1:2])
print(x[2,3] , x[2,2])
print(x[2,1:3] )
### 4) Dados los arrays a = [1, 4, 2, 7] y b = [1, 3, 2, 9], obtenga la media aritmética de la diferencia (a-b).
a = np.array([1,4,2,7])
b = np.array([1,3,2,9])
c = a-b
print("resta: ", c)
print("media aritmetica: ", np.median(c))
### 5) Tengo valores de cordenadas (x, y) en las columnas del array
coordenadas = np.array([
                        [1.33, 4.5], 
                        [30.0, 10.7],
                        [70.2, 0.5]
    ])
print(coordenadas)
coordenadosv1 = np.append(coordenadas, [[37.1, -3.6]], axis=0)
print()
print(coordenadosv1)
### 6) Copie el array del ejercicio anterior. Traspóngalo (. Agregue ahora dos nuevos pares de coordenadas: (10.8, 3.0) y (35.8, 12.0)
coordenadosv2 = np.append(coordenadosv1, [[10.8, 3.0],[35.8, 12.0]], axis=0)
print(coordenadosv2)
### Parte 2: Exploración y Minería de Datos: Con el dataset nucleospoblacion.csv adjunto al laboratorio, luego responda las siguientes preguntas usando pandas y matplotlib.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
dataset = pd.read_csv("NucleosPoblacion.csv")
print(dataset.head())
print(dataset.dtypes)
dataset_ordenado= dataset.sort_values(by=['Poblacion'], ascending=[False])
print(dataset_ordenado)
### 1) ¿Cuántos Municipios tienen más de 100000 habitantes?.
P=dataset_ordenado[dataset_ordenado['Poblacion'] > 100000]
print(P)
print("Los municipios con mas de 10,000 habitantes son: ", len(P))
### 2) Realice una gráfica de barras sobre la población de cada ciudad, ordenela de menor a mayor y responda: 
##### a. ¿Cuál es la segunda ciudad más poblada?
##### b. ¿Qué posición ocupa Granada en el ranking de las ciudades más pobladas?
dataset_menor= dataset.sort_values(by=['Poblacion'], ascending=[True])
print(dataset_menor)
canttt= dataset_menor.groupby(['Poblacion','Municipio']).size()
canttt
canttt.plot(kind='bar', title='Poblacion por Municipio')
penultimo = dataset_menor[850:851]
print("La segunda ciudad mas poblada es: ", penultimo['Municipio'])
df= pd.DataFrame(data=dataset_menor)
df
dataset_menor[(dataset_menor['Municipio'] == 'Granada')]
### 3) ¿Cuántos municipios de Extremadura tienen más de 5000 habitantes?.
dataset_menor[(dataset_menor['Municipio'] == 'Extremadura')&
              (dataset_menor['Poblacion']>5000)]
 ### 4) ¿Cuál es el municipio situado más al Norte? (Usar el valor de la coordenada "Y" que representa la latitud en grados). Proporcione también la provincia a la que pertenece y su población.
 coordenadaY=dataset_menor[(dataset_menor['Y']==np.max(dataset_menor['Y']))]
print(coordenadaY)
### 5) Obtenga la media, mediana, desviación estándar, valor máximo y valor mínimo de la población de los municipios de la provincia de Granada.
Granada=dataset_menor[(dataset_menor['Provincia']=="Granada")]
print(Granada)
print("La mediana es: ", np.median(Granada['Poblacion']))
print("La media es: ", np.mean(Granada['Poblacion']))
print("La desviacion estandar es: ", np.std(Granada['Poblacion']))
print("El maximo es: ", np.max(Granada['Poblacion']))
print("El minimo es: ", np.min(Granada['Poblacion']))
### 6) Realice un histograma con la población de los Municipios para cada una de las provincias.
poblacion = dataset_menor['Provincia']
plt.hist(poblacion, bins = range(len(poblacion)+1),align='mid',
         orientation='vertical', color='green', ec = 'k'
)
### 7) Seleccione al azar cincuenta municipios diferentes de entre los diponibles en el archivo. Asegúrese de que no se repitan. ¿Luego calcule el promedio de la población y la desviación estándar de esto 50 municipios?
import random
from seaborn import load_dataset
aleatorio= dataset_menor.sample(n=50, random_state=2)
print(aleatorio)
print("La media es: ", np.mean(aleatorio['Poblacion']))
print("La desviacion estandar es: ", np.std(aleatorio['Poblacion']))
